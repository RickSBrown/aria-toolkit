<project basedir="." default="dist">

	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpath="${basedir}/libs/closure-compiler/compiler.jar"/>

	<!--<property name="enable.debug" value="true"/>-->
	<property name="aria.rdf.url" value="xml/aria-1.rdf"/>
	<property name="src.dir" location="src"/>
	<property name="build.dir" location="build"/>
	<property name="dist.dir" location="dist"/>
	<property name="test.build.dir" location="${build.dir}"/>
	<property name="build.version" value="0.4"/>
	<property name="chrome-ext-dir-name" value="chrome-ext"/>

	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>

	<target name="build" depends="clean">
		<mkdir dir="${build.dir}/js"/>
		<mkdir dir="${build.dir}/xml"/>
		<concat destfile="${build.dir}/js/aria-${build.version}-debug.js" fixlastline="true">
			<header>
				<![CDATA[
/**
 * ARIA-js
 * Copyright 2014, Rick Brown
 */
(function(){"use strict";
var scope = this || window;
scope.ARIA = new ARIA({query:query, loadXml:loadXml, url: "${aria.rdf.url}"});
scope = null;
				]]>
			</header>
			<footer>})();</footer>
			<fileset dir="${src.dir}/main/js" includes="*.js" excludes="*.validator.js"/>
		</concat>
		<xslt style="${src.dir}/main/xslt/aria-minifier.xsl" in="libs/aria/aria-1.rdf" out="${build.dir}/xml/aria-1.rdf"/>
		<copy file="${src.dir}/main/js/aria.validator.js" tofile="${build.dir}/js/aria.validator-${build.version}-debug.js"/>
		<copy file="LICENSE" todir="${build.dir}"/>
		<copy file="README" todir="${build.dir}"/>
	</target>

	<target name="buildChromeExt" depends="dist, initChromeExt, debugChromeExt, compileChromeExt">
		<zip destfile="${build.dir}/aria-validator-chrome.zip" basedir="${chromeExtDistDir}"/>
	</target>

	<target name="initChromeExt">
		<property name="chromeExtDistDir" location="${build.dir}/${chrome-ext-dir-name}"/>
		<mkdir dir="${chromeExtDistDir}"/>
		<fileset dir="${src.dir}/main/js" includes="*.js" excludes="*.validator.js"/>
		<copy todir="${chromeExtDistDir}">
			<fileset dir="${build.dir}">
				<exclude name="**/*-debug.js"/>
				<include name="**/*.rdf"/>
				<include name="**/*.js"/>
			</fileset>
		</copy>
		<copy todir="${chromeExtDistDir}">
			<fileset dir="${src.dir}/main/${chrome-ext-dir-name}">
				<exclude name="*.js"/>
				<exclude name="**/*.png"/>
				<include name="**/*"/>
			</fileset>
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
		<copy todir="${chromeExtDistDir}">
			<fileset dir="${src.dir}/main/${chrome-ext-dir-name}">
				<include name="**/*.png"/>
			</fileset>
		</copy>
	</target>

	<target name="debugChromeExt" if="enable.debug">
		<copy todir="${chromeExtDistDir}">
			<fileset dir="${src.dir}/main/${chrome-ext-dir-name}">
				<include name="*.js"/>
			</fileset>
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
		<echo>DEBUG MODE IS ON!!! DO NOT DISTRIBUTE THIS BUILD!</echo>
	</target>

	<target name="compileChromeExt" unless="enable.debug">
		<jscomp compilationLevel="simple" debug="false" output="${chromeExtDistDir}/background.js">
			<sources dir="${src.dir}/main/${chrome-ext-dir-name}">
				<file name="background.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple" debug="false" output="${chromeExtDistDir}/contentscript.js">
			<sources dir="${src.dir}/main/${chrome-ext-dir-name}">
				<file name="contentscript.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple" debug="false" output="${chromeExtDistDir}/summary.js">
			<sources dir="${src.dir}/main/${chrome-ext-dir-name}">
				<file name="summary.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple" debug="false" output="${chromeExtDistDir}/options.js">
			<sources dir="${src.dir}/main/${chrome-ext-dir-name}">
				<file name="options.js"/>
			</sources>
		</jscomp>
	</target>

	<target name="test" depends="dist" description="Build tests for the project">
		<mkdir dir="${test.build.dir}"/>
		<unzip src="${basedir}/libs/jasmine/jasmine-standalone-2.0.0.zip" dest="${test.build.dir}">
			<patternset>
				<include name="lib/"/>
			</patternset>
		</unzip>
		<copy todir="${test.build.dir}">
			<fileset dir="${src.dir}/test">
				<include name="**/*"/>
			</fileset>
			<filterchain>
				<expandproperties/>
			</filterchain>
		</copy>
	</target>

	<target name="dist" depends="build, debug, compile" description="Builds the tarball for distribution">
		<mkdir dir="${dist.dir}"/>
		<tar destfile="${dist.dir}/aria-toolkit-${build.version}.tar" basedir="${build.dir}"/>
		<!--gzip destfile="${dist.dir}/aria-toolkit.tar.gz" src="${dist.dir}/aria-toolkit-${build.version}.tar"/-->
	</target>

	<target name="debug" if="enable.debug">
		<copy todir="${build.dir}/js">
			<fileset dir="${build.dir}/js">
				<include name="*-debug.js"/>
			</fileset>
			<globmapper from="*-debug.js" to="*.js"/>
		</copy>
	</target>

	<target name="compile" unless="enable.debug">
		<jscomp compilationLevel="simple" debug="false" output="${build.dir}/js/aria-${build.version}.js">
			<sources dir="${build.dir}/js">
				<file name="aria-${build.version}-debug.js"/>
			</sources>
		</jscomp>
		<jscomp compilationLevel="simple" debug="false" output="${build.dir}/js/aria.validator-${build.version}.js">
			<sources dir="${build.dir}/js">
				<file name="aria.validator-${build.version}-debug.js"/>
			</sources>
		</jscomp>
	</target>

</project>
